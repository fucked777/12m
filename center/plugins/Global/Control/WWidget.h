
#ifndef WWIDGET_H
#define WWIDGET_H

#include "DataTypeDefine.h"
#include "GlobalDefine.h"
#include "ProtocolXmlTypeDefine.h"

#include <QVariant>
#include <QWidget>

struct Limit
{
    template<typename T>
    static constexpr typename std::enable_if<std::is_unsigned<T>::value, T>::type max() noexcept
    {
        return ~static_cast<T>(0);
    }
    template<typename T>
    static constexpr typename std::enable_if<std::is_signed<T>::value, T>::type max() noexcept
    {
        return static_cast<T>(Limit::max<typename std::make_unsigned<T>::type>() >> 1);
    }

    template<typename T>
    static constexpr typename std::enable_if<std::is_unsigned<T>::value, T>::type min() noexcept
    {
        return static_cast<T>(0);
    }
    template<typename T>
    static constexpr typename std::enable_if<std::is_signed<T>::value, T>::type min() noexcept
    {
        return ~Limit::max<T>();
    }
};

static qlonglong getMin(AttributeType attrType)
{
    switch (attrType)
    {
    case AttributeType_Int8:
    {
        return Limit::min<qint8>();
    }
    case AttributeType_UInt8:
    {
        return Limit::min<quint8>();
    }
    case AttributeType_Short:
    {
        return Limit::min<short>();
    }
    case AttributeType_UShort:
    {
        return Limit::min<ushort>();
    }
    case AttributeType_Int:
    {
        return Limit::min<int>();
    }
    case AttributeType_UInt:
    {
        return Limit::min<uint>();
    }
    case AttributeType_Float:
    {
        return 0;
    }
    case AttributeType_Double:
    {
        return 0;
    }
    case AttributeType_Long:
    {
        return Limit::min<qint64>();
    }
    case AttributeType_ULong:
    {
        return Limit::min<quint64>();
    }
    default: return 0;
    }
}

static qulonglong getMax(AttributeType attrType)
{
    switch (attrType)
    {
    case AttributeType_Int8:
    {
        return Limit::max<qint8>();
    }
    case AttributeType_UInt8:
    {
        return Limit::max<quint8>();
    }
    case AttributeType_Short:
    {
        return Limit::max<short>();
    }
    case AttributeType_UShort:
    {
        return Limit::max<ushort>();
    }
    case AttributeType_Int:
    {
        return Limit::max<int>();
    }
    case AttributeType_UInt:
    {
        return Limit::max<uint>();
    }
    case AttributeType_Float:
    {
        return Limit::max<quint64>();
    }
    case AttributeType_Double:
    {
        return Limit::max<quint64>();
    }
    case AttributeType_Long:
    {
        return Limit::max<quint64>();
    }
    case AttributeType_ULong:
    {
        return Limit::max<quint64>();
    }
    default: return Limit::max<qint64>();
    }
}

struct TestCreateUIAttribute;
struct TestCreateUIEnumValueMap;
class WWidget : public QWidget
{
    Q_OBJECT
public:
    explicit WWidget(QWidget* parent = nullptr);
    virtual ~WWidget();
    /* 这个是配置宏内边的 */
    virtual void setAttr(const ParameterAttribute& attr, const QMap<QString, QVariant>& map);
    virtual void setAttrOrder(const ParameterAttribute& attr, const QMap<int, QPair<QString, QVariant>>& map);
    /*******************************************************/
    /*
     * 设置和获取当前值
     */
    virtual void setValue(const QVariant& value) = 0;
    virtual QVariant value() = 0;
    virtual QVariant value(bool& isValid);

    /* 此函数不是重置控件到无数据状态,是重置输入的数据,比如WUNumber就是把数据重置为0,WCombobox就是重置为选择第一项(不清除每一项)
     */
    virtual void resetValue();
    virtual void setValueStyleSheet(const QString&);
    virtual void setParamDesc(const QString&);
    virtual QString text();
    /*
     * 设置最大最小值
     */
    virtual void setMinNum(const QVariant& minNum);
    virtual void setMaxNum(const QVariant& maxNum);
    virtual void setNumRange(const QVariant& minNum, const QVariant& maxNum);
    /* 设置输入最大长度 */
    virtual void setMaxLength(int len);

    virtual void setName(const QString&);
    virtual void setUnit(const QString&);
    /* 设置精度 */
    virtual void setDecimal(int dec);
    virtual void setReadOnly(bool);
    /*
     * 设置当前控件处于什么状态
     */
    virtual void setParamStatus(DataBuilder::FormsStatus status);
    /* 调整控件尺寸 */
    virtual void setNameWidth(int w);
    virtual void setValueWidth(int w);
    virtual void setControlHeight(int h);

    virtual void addItem(const QVariant&, const QVariant&);
    virtual void setItem(const QMap<QString, QVariant>&);
    virtual void setItemOrder(const QMap<int, QPair<QString, QVariant>>&);

    //  virtual void setEnabled(bool state);

    static void outOfRangesLineEdit(QWidget* widget, bool);

    ParameterAttribute paramAttr;
signals:
    void sig_valueChange(const QString& value);  /* 发送当前文本 */
    void sig_valueChange(const QVariant& value); /* 发送当前的数据 */

public slots:
};

class WWidgetEmpty : public WWidget
{
    Q_OBJECT
public:
    explicit WWidgetEmpty(QWidget* parent = nullptr);
    ~WWidgetEmpty();
    void setValue(const QVariant& value);
    QVariant value();
};

static constexpr const unsigned char gRedIcon[] = {
    0x89, 0x50, 0x4e, 0x47, 0xd,  0xa,  0x1a, 0xa,  0x0,  0x0,  0x0,  0xd,  0x49, 0x48, 0x44, 0x52, 0x0,  0x0,  0x0,  0x10, 0x0,  0x0,  0x0,  0x10,
    0x8,  0x3,  0x0,  0x0,  0x0,  0x28, 0x2d, 0xf,  0x53, 0x0,  0x0,  0x0,  0x1,  0x73, 0x52, 0x47, 0x42, 0x1,  0xd9, 0xc9, 0x2c, 0x7f, 0x0,  0x0,
    0x0,  0x9,  0x70, 0x48, 0x59, 0x73, 0x0,  0x0,  0xb,  0x13, 0x0,  0x0,  0xb,  0x13, 0x1,  0x0,  0x9a, 0x9c, 0x18, 0x0,  0x0,  0x1,  0xfe, 0x50,
    0x4c, 0x54, 0x45, 0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x10, 0x1,  0x1,  0x17, 0x0,  0x0,  0x17, 0x0,  0x0,  0x11, 0x1,  0x1,  0x3a, 0x1,  0x1,
    0x66, 0x27, 0x27, 0x87, 0x49, 0x49, 0x93, 0x57, 0x57, 0x94, 0x58, 0x58, 0x89, 0x4b, 0x4b, 0x6b, 0x2d, 0x2d, 0x3f, 0x2,  0x2,  0x24, 0x6,  0x6,
    0x48, 0x8,  0x8,  0x8d, 0x4b, 0x4b, 0xcc, 0xaa, 0xaa, 0xec, 0xdc, 0xdc, 0xf1, 0xe5, 0xe5, 0xed, 0xde, 0xde, 0xd1, 0xb2, 0xb2, 0x95, 0x56, 0x56,
    0x4d, 0x9,  0x9,  0x31, 0x7,  0x7,  0x48, 0x9,  0x9,  0x6a, 0x14, 0x14, 0xd1, 0xad, 0xad, 0xe3, 0xc8, 0xc8, 0xe3, 0xc5, 0xc5, 0xe4, 0xc6, 0xc6,
    0xd7, 0xb7, 0xb7, 0x6f, 0x17, 0x17, 0x4b, 0x9,  0x9,  0x0,  0x0,  0x0,  0x22, 0x5,  0x5,  0x69, 0xe,  0xe,  0x88, 0x29, 0x29, 0xc8, 0x8d, 0x8d,
    0xca, 0x8a, 0x8a, 0xce, 0x8b, 0x8b, 0xcf, 0x8b, 0x8b, 0xcb, 0x8a, 0x8a, 0xc9, 0x8d, 0x8d, 0x91, 0x38, 0x38, 0x6d, 0xf,  0xf,  0x28, 0x6,  0x6,
    0x0,  0x0,  0x0,  0x47, 0xb,  0xb,  0x76, 0x11, 0x11, 0x8d, 0x1f, 0x1f, 0xb9, 0x5f, 0x5f, 0xbf, 0x5f, 0x5f, 0xc3, 0x60, 0x60, 0xc4, 0x60, 0x60,
    0xc0, 0x5f, 0x5f, 0xbb, 0x60, 0x60, 0x94, 0x27, 0x27, 0x7a, 0x12, 0x12, 0x4f, 0xc,  0xc,  0x0,  0x0,  0x0,  0x59, 0xd,  0xd,  0x86, 0x14, 0x14,
    0x99, 0x17, 0x17, 0xb1, 0x2b, 0x2b, 0xba, 0x31, 0x31, 0xbf, 0x32, 0x32, 0xc0, 0x32, 0x32, 0xbb, 0x31, 0x31, 0xb3, 0x2c, 0x2c, 0x9b, 0x18, 0x18,
    0x8b, 0x15, 0x15, 0x5e, 0xe,  0xe,  0x0,  0x0,  0x0,  0x5b, 0xe,  0xe,  0x92, 0x16, 0x16, 0xa6, 0x1a, 0x1a, 0xba, 0x1f, 0x1f, 0xc3, 0x22, 0x22,
    0xc9, 0x24, 0x24, 0xc4, 0x22, 0x22, 0xbb, 0x1f, 0x1f, 0xa8, 0x1b, 0x1b, 0x95, 0x16, 0x16, 0x62, 0xf,  0xf,  0x0,  0x0,  0x0,  0x5e, 0xf,  0xf,
    0x9d, 0x19, 0x19, 0xb9, 0x1f, 0x1f, 0xd3, 0x27, 0x27, 0xdd, 0x2a, 0x2a, 0xe2, 0x2d, 0x2d, 0xe4, 0x2d, 0x2d, 0xdc, 0x2a, 0x2a, 0xd1, 0x26, 0x26,
    0xb7, 0x1f, 0x1f, 0x9f, 0x19, 0x19, 0x64, 0x10, 0x10, 0x4f, 0xd,  0xd,  0xa0, 0x1a, 0x1a, 0xc3, 0x21, 0x21, 0xe1, 0x2a, 0x2a, 0xec, 0x2f, 0x2f,
    0xf2, 0x32, 0x32, 0xf3, 0x33, 0x33, 0xf1, 0x32, 0x32, 0xe9, 0x2e, 0x2e, 0xdc, 0x29, 0x29, 0xbd, 0x20, 0x20, 0x9e, 0x19, 0x19, 0x57, 0xf,  0xf,
    0x0,  0x0,  0x0,  0x17, 0x5,  0x5,  0x90, 0x18, 0x18, 0xc0, 0x1f, 0x1f, 0xe3, 0x29, 0x29, 0xf2, 0x2f, 0x2f, 0xfa, 0x34, 0x34, 0xfc, 0x35, 0x35,
    0xfb, 0x35, 0x35, 0xf8, 0x33, 0x33, 0xeb, 0x2d, 0x2d, 0xd8, 0x27, 0x27, 0xb4, 0x1d, 0x1d, 0x8d, 0x17, 0x17, 0x1f, 0x6,  0x6,  0x0,  0x0,  0x0,
    0x5e, 0x10, 0x10, 0xa8, 0x1b, 0x1b, 0xd9, 0x24, 0x24, 0xed, 0x2b, 0x2b, 0xfa, 0x31, 0x31, 0xfd, 0x33, 0x33, 0xfb, 0x33, 0x33, 0xf5, 0x30, 0x30,
    0xe2, 0x29, 0x29, 0xcb, 0x22, 0x22, 0x9f, 0x19, 0x19, 0x60, 0x10, 0x10, 0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x2c, 0x9,  0x9,  0xa9, 0x1c, 0x1c,
    0xd4, 0x23, 0x23, 0xeb, 0x29, 0x29, 0xf2, 0x2b, 0x2b, 0xf0, 0x2b, 0x2b, 0xe5, 0x28, 0x28, 0xca, 0x21, 0x21, 0xa0, 0x1a, 0x1a, 0x3a, 0xa,  0xa,
    0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x4c, 0xe,  0xe,  0x8c, 0x19, 0x19, 0xbc, 0x20, 0x20, 0xc8, 0x21, 0x21, 0xc7, 0x21, 0x21, 0xba, 0x1f, 0x1f,
    0x8a, 0x18, 0x18, 0x4e, 0xe,  0xe,  0x0,  0x0,  0x0,  0x15, 0x5,  0x5,  0x28, 0x8,  0x8,  0x29, 0x8,  0x8,  0x18, 0x5,  0x5,  0x1,  0x0,  0x0,
    0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0xf1, 0x3b, 0x3a, 0xa8, 0x0,  0x0,  0x0,  0xaa, 0x74, 0x52, 0x4e, 0x53, 0x0,  0x1,  0x8,
    0x1b, 0x1e, 0xa,  0x1a, 0x55, 0xa8, 0xcb, 0xcd, 0xae, 0x5e, 0x20, 0x7,  0x3a, 0xd4, 0xf8, 0xff, 0xff, 0xff, 0xfa, 0xdd, 0x47, 0x9,  0x33, 0xce,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0x41, 0x2,  0xe,  0xba, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x14, 0x3,  0x2d, 0xe7, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x3b, 0x4,  0x58, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x70, 0x5,  0x6b,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0x7,  0x58, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x70, 0x3b,
    0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x4a, 0x8,  0x17, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xc1, 0x1d, 0xa,  0x52, 0xe4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x61, 0xc,  0x11, 0x35, 0xd1, 0xf9, 0xff, 0xff, 0xff,
    0xff, 0xfb, 0xd9, 0x41, 0x14, 0x12, 0x41, 0x85, 0xcd, 0xdd, 0xde, 0xd0, 0x8d, 0x48, 0x14, 0x25, 0x30, 0x30, 0x26, 0x15, 0xd,  0x9,  0xb,  0x7,
    0x2a, 0x45, 0xf3, 0x0,  0x0,  0x0,  0xfc, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x0,  0x2,  0x46, 0x6,  0x26, 0x66, 0x16, 0x56, 0x20,
    0x5,  0x5,  0x8c, 0x6c, 0xec, 0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x50, 0x11, 0x3e, 0x7e, 0x1,  0x41, 0x21, 0x61, 0x61, 0x11, 0x51, 0x31, 0x71,
    0x9,  0x90, 0x10, 0xa3, 0xa4, 0x94, 0xb4, 0x8c, 0xac, 0x9c, 0x9c, 0xac, 0x8c, 0xbc, 0x82, 0xa2, 0x12, 0x90, 0xaf, 0xac, 0xa2, 0xaa, 0xa6, 0xae,
    0xa1, 0xa9, 0xa9, 0xa1, 0xa5, 0xad, 0xa3, 0xab, 0xa7, 0xc4, 0xa0, 0x6f, 0x60, 0x68, 0x64, 0x6c, 0x62, 0x6a, 0x66, 0x66, 0x6a, 0x6e, 0x61, 0x69,
    0x65, 0xad, 0xcf, 0x60, 0x63, 0x6b, 0x67, 0xef, 0xe0, 0xe8, 0xe4, 0xec, 0xec, 0xe4, 0xe2, 0xea, 0xe6, 0xee, 0xa1, 0xcf, 0xe0, 0xe9, 0xe5, 0xed,
    0xe3, 0xeb, 0xe7, 0xf,  0x4,  0x1,  0x81, 0x41, 0xc1, 0x21, 0x9e, 0xc,  0xa1, 0x61, 0xe1, 0x11, 0x91, 0x51, 0xd1, 0x31, 0x31, 0xd1, 0xb1, 0x71,
    0xf1, 0x9,  0x89, 0xa1, 0xc,  0xa1, 0x49, 0xc9, 0x29, 0xa9, 0x69, 0xe9, 0x19, 0x19, 0x99, 0x59, 0xd9, 0x39, 0xb9, 0x79, 0xf9, 0xc,  0x36, 0x5,
    0x85, 0x45, 0xc5, 0x25, 0xa5, 0x65, 0xe5, 0x15, 0x95, 0x55, 0xd5, 0x35, 0xb5, 0x9e, 0xc,  0x4a, 0x75, 0xf5, 0xd,  0x8d, 0x4d, 0xcd, 0x2d, 0xad,
    0x6d, 0xed, 0x1d, 0x9d, 0x5d, 0xdd, 0x40, 0x87, 0xe8, 0xf7, 0xf4, 0xf6, 0xf5, 0x4f, 0x98, 0x38, 0x69, 0xf2, 0x94, 0xa9, 0xd3, 0xa6, 0xdb, 0x80,
    0x5c, 0x1a, 0x3a, 0x63, 0xe6, 0xac, 0xd9, 0x73, 0xe6, 0xce, 0x9b, 0xbf, 0x60, 0x61, 0x3e, 0xd8, 0x37, 0x8c, 0xfa, 0xdd, 0xb,  0x17, 0x2d, 0x5e,
    0xb2, 0x74, 0xd9, 0x72, 0x1b, 0x98, 0x7f, 0x95, 0x6c, 0x56, 0xac, 0xec, 0x5e, 0xe1, 0xa9, 0x4,  0x62, 0x3,  0x0,  0xa9, 0xaa, 0x42, 0xdd, 0x50,
    0x81, 0x78, 0xb0, 0x0,  0x0,  0x0,  0x0,  0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};
static constexpr const unsigned char gGreyIcon[] = {
    0x89, 0x50, 0x4e, 0x47, 0xd,  0xa,  0x1a, 0xa,  0x0,  0x0,  0x0,  0xd,  0x49, 0x48, 0x44, 0x52, 0x0,  0x0,  0x0,  0x10, 0x0,  0x0,  0x0,  0x10,
    0x8,  0x3,  0x0,  0x0,  0x0,  0x28, 0x2d, 0xf,  0x53, 0x0,  0x0,  0x0,  0x1,  0x73, 0x52, 0x47, 0x42, 0x1,  0xd9, 0xc9, 0x2c, 0x7f, 0x0,  0x0,
    0x0,  0x9,  0x70, 0x48, 0x59, 0x73, 0x0,  0x0,  0xb,  0x13, 0x0,  0x0,  0xb,  0x13, 0x1,  0x0,  0x9a, 0x9c, 0x18, 0x0,  0x0,  0x2,  0xa,  0x50,
    0x4c, 0x54, 0x45, 0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x9,  0xb,  0xd,  0xd,  0x10, 0x14, 0xe,  0x11, 0x15, 0xa,  0xc,  0xf,  0x22, 0x29, 0x33,
    0x4b, 0x52, 0x5d, 0x6c, 0x74, 0x7e, 0x79, 0x81, 0x8b, 0x7a, 0x82, 0x8c, 0x6e, 0x76, 0x80, 0x50, 0x57, 0x62, 0x25, 0x2d, 0x36, 0x17, 0x1b, 0x21,
    0x2c, 0x35, 0x40, 0x71, 0x79, 0x85, 0xbd, 0xc1, 0xc7, 0xe6, 0xe7, 0xea, 0xec, 0xed, 0xf0, 0xec, 0xee, 0xf0, 0xe7, 0xe8, 0xeb, 0xc4, 0xc8, 0xcd,
    0x7a, 0x82, 0x8d, 0x30, 0x38, 0x44, 0x1e, 0x23, 0x2b, 0x2d, 0x35, 0x40, 0x44, 0x4f, 0x5f, 0xc1, 0xc6, 0xcc, 0xd7, 0xdb, 0xe0, 0xd6, 0xda, 0xdf,
    0xc9, 0xcd, 0xd3, 0x49, 0x54, 0x63, 0x2e, 0x37, 0x43, 0x0,  0x0,  0x0,  0x14, 0x19, 0x1e, 0x41, 0x4d, 0x5d, 0x5f, 0x6b, 0x7c, 0xaf, 0xb6, 0xc1,
    0xaf, 0xb7, 0xc2, 0xb1, 0xba, 0xc6, 0xb2, 0xbb, 0xc7, 0xaf, 0xb7, 0xc3, 0xaf, 0xb7, 0xc1, 0x6b, 0x76, 0x87, 0x44, 0x50, 0x62, 0x1a, 0x1d, 0x24,
    0x0,  0x0,  0x0,  0x2d, 0x35, 0x3f, 0x4b, 0x58, 0x69, 0x5e, 0x6d, 0x80, 0x93, 0x9f, 0xaf, 0x96, 0xa3, 0xb3, 0x9a, 0xa7, 0xb7, 0x9a, 0xa8, 0xb8,
    0x9a, 0xa8, 0xb9, 0x9a, 0xa7, 0xb8, 0x97, 0xa4, 0xb4, 0x94, 0xa1, 0xb0, 0x65, 0x73, 0x86, 0x4d, 0x5a, 0x6d, 0x32, 0x3b, 0x47, 0x0,  0x0,  0x0,
    0x39, 0x41, 0x4e, 0x57, 0x64, 0x77, 0x64, 0x74, 0x89, 0x7d, 0x8e, 0xa2, 0x86, 0x98, 0xab, 0x8b, 0x9d, 0xb0, 0x8c, 0x9e, 0xb0, 0x8c, 0x9e, 0xb1,
    0x87, 0x99, 0xac, 0x7f, 0x90, 0xa4, 0x66, 0x76, 0x8c, 0x59, 0x68, 0x7c, 0x3c, 0x46, 0x53, 0x0,  0x0,  0x0,  0x3b, 0x43, 0x50, 0x60, 0x6d, 0x81,
    0x70, 0x81, 0x97, 0x85, 0x99, 0xac, 0x8f, 0xa4, 0xb5, 0x96, 0xaa, 0xba, 0x97, 0xab, 0xbb, 0x90, 0xa4, 0xb5, 0x72, 0x83, 0x99, 0x62, 0x71, 0x85,
    0x40, 0x49, 0x56, 0x0,  0x0,  0x0,  0x3e, 0x46, 0x53, 0x6a, 0x78, 0x8d, 0x84, 0x96, 0xad, 0xa4, 0xbb, 0xc9, 0xb5, 0xcb, 0xd4, 0xbf, 0xd3, 0xdb,
    0xc1, 0xd4, 0xdc, 0xbf, 0xd2, 0xda, 0xb4, 0xc9, 0xd3, 0xa2, 0xb9, 0xc6, 0x82, 0x95, 0xaa, 0x6b, 0x79, 0x8e, 0x42, 0x4b, 0x57, 0x34, 0x3b, 0x44,
    0x6c, 0x7a, 0x8d, 0x8c, 0x9e, 0xb5, 0xb5, 0xcd, 0xd9, 0xcb, 0xe1, 0xe7, 0xd9, 0xeb, 0xee, 0xdd, 0xec, 0xef, 0xd8, 0xe9, 0xed, 0xc7, 0xdd, 0xe3,
    0xb0, 0xc7, 0xd3, 0x88, 0x99, 0xaf, 0x6b, 0x78, 0x8c, 0x3a, 0x41, 0x4c, 0x0,  0x0,  0x0,  0x10, 0x12, 0x14, 0x62, 0x6d, 0x7d, 0x87, 0x97, 0xad,
    0xb3, 0xc9, 0xdd, 0xce, 0xe6, 0xee, 0xe3, 0xf7, 0xf9, 0xe9, 0xfb, 0xfb, 0xe8, 0xf9, 0xfa, 0xe0, 0xf4, 0xf5, 0xc6, 0xde, 0xe5, 0xa9, 0xbe, 0xcf,
    0x7f, 0x8e, 0xa3, 0x5f, 0x6b, 0x7b, 0x15, 0x17, 0x1b, 0x0,  0x0,  0x0,  0x40, 0x47, 0x50, 0x73, 0x80, 0x92, 0xa4, 0xb6, 0xce, 0xc2, 0xd7, 0xe8,
    0xdb, 0xf3, 0xf8, 0xe3, 0xfa, 0xfc, 0xe2, 0xf8, 0xfa, 0xd6, 0xec, 0xf2, 0xb7, 0xcb, 0xdb, 0x98, 0xa8, 0xbe, 0x6e, 0x79, 0x8b, 0x41, 0x48, 0x53,
    0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x1e, 0x21, 0x26, 0x76, 0x81, 0x93, 0x9b, 0xaa, 0xc2, 0xb8, 0xca, 0xe3, 0xc3, 0xd7, 0xed, 0xc1, 0xd5, 0xeb,
    0xb3, 0xc5, 0xdd, 0x93, 0xa2, 0xb8, 0x70, 0x7b, 0x8b, 0x27, 0x2b, 0x31, 0x1,  0x1,  0x1,  0x0,  0x0,  0x0,  0x35, 0x3a, 0x41, 0x64, 0x6c, 0x7b,
    0x89, 0x95, 0xa8, 0x94, 0xa1, 0xb6, 0x93, 0xa1, 0xb5, 0x87, 0x94, 0xa6, 0x62, 0x6b, 0x79, 0x37, 0x3c, 0x44, 0x0,  0x0,  0x0,  0xf,  0x10, 0x12,
    0x1c, 0x1f, 0x22, 0x1d, 0x1f, 0x23, 0x11, 0x13, 0x14, 0x1,  0x1,  0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x19, 0x95, 0x2c,
    0x9a, 0x0,  0x0,  0x0,  0xae, 0x74, 0x52, 0x4e, 0x53, 0x0,  0x1,  0x8,  0x1b, 0x1e, 0xa,  0x1a, 0x55, 0xa8, 0xcb, 0xcd, 0xae, 0x5e, 0x20, 0x7,
    0x3a, 0xd4, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xfa, 0xdd, 0x47, 0x9,  0x33, 0xce, 0xff, 0xff, 0xff, 0xff, 0xdd, 0x41, 0x2,  0xe,  0xba, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x14, 0x3,  0x2d, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x3b, 0x4,
    0x58, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x70, 0x5,  0x6b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x81, 0x7,  0x58, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x70, 0x3b, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xf3, 0x4a, 0x8,  0x17, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0x1d, 0xa,  0x52, 0xe4, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x61, 0xc,  0x11, 0x35, 0xd1, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xd9, 0x41, 0x14, 0x12, 0x41, 0x85,
    0xcd, 0xdd, 0xde, 0xd0, 0x8d, 0x48, 0x14, 0x25, 0x30, 0x30, 0x26, 0x15, 0xd,  0x9,  0xb,  0x1a, 0x94, 0xd4, 0x48, 0x0,  0x0,  0x0,  0xfc, 0x49,
    0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x0,  0x2,  0x46, 0x6,  0x26, 0x66, 0x16, 0x56, 0x20, 0x5,  0x5,  0x8c, 0x6c, 0xec, 0x1c, 0x9c, 0x5c,
    0xdc, 0x3c, 0xbc, 0x50, 0x11, 0x3e, 0x7e, 0x1,  0x41, 0x21, 0x61, 0x11, 0x51, 0x31, 0x71, 0x9,  0x49, 0x90, 0x10, 0xa3, 0x94, 0xb4, 0x8c, 0xac,
    0x9c, 0x2c, 0x10, 0xc9, 0x2b, 0x28, 0x2a, 0x1,  0xf9, 0xca, 0x2a, 0xaa, 0x6a, 0xea, 0x1a, 0x9a, 0x9a, 0x1a, 0x5a, 0xda, 0x3a, 0xba, 0x7a, 0x4a,
    0xc,  0xfa, 0x6,  0x86, 0x46, 0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16, 0x96, 0x56, 0xd6, 0x36, 0xb6, 0xfa, 0xc,  0x76, 0xf6, 0xe,  0x8e, 0x4e, 0xce,
    0x2e, 0xae, 0x6e, 0x2e, 0xee, 0x1e, 0x9e, 0x5e, 0xde, 0xfa, 0xc,  0x3e, 0xbe, 0x7e, 0xfe, 0x1,  0x81, 0x41, 0xc1, 0xc1, 0x41, 0x21, 0x1,  0xa1,
    0x61, 0xe1, 0x3e, 0xc,  0x11, 0x91, 0x51, 0xd1, 0x31, 0xb1, 0x71, 0xf1, 0xf1, 0x9,  0x89, 0x49, 0xc9, 0x29, 0xa9, 0x11, 0xc,  0x11, 0x69, 0xe9,
    0x19, 0x99, 0x59, 0xd9, 0x39, 0x39, 0xb9, 0x79, 0xf9, 0x5,  0x85, 0x45, 0xc5, 0xc,  0x76, 0x25, 0xa5, 0x65, 0xe5, 0x15, 0x95, 0x55, 0xd5, 0x35,
    0xb5, 0x75, 0xf5, 0xd,  0x8d, 0x3e, 0xc,  0x4a, 0x4d, 0xcd, 0x2d, 0xad, 0x6d, 0xed, 0x1d, 0x9d, 0x5d, 0xdd, 0x3d, 0xbd, 0x7d, 0xfd, 0x40, 0x87,
    0xe8, 0x4f, 0x98, 0x38, 0x69, 0xf2, 0x94, 0xa9, 0xd3, 0xa6, 0xcf, 0x98, 0x39, 0x6b, 0xb6, 0x1d, 0xc8, 0xa5, 0x11, 0x73, 0xe6, 0xce, 0x9b, 0xbf,
    0x60, 0xe1, 0xa2, 0xc5, 0x4b, 0x96, 0x16, 0x83, 0x7d, 0xc3, 0xa8, 0xdf, 0xbf, 0x74, 0xd9, 0xf2, 0x15, 0x2b, 0x57, 0xad, 0xb6, 0x83, 0xf9, 0x57,
    0xc9, 0x6e, 0xcd, 0xda, 0xfe, 0x35, 0x3e, 0x4a, 0x20, 0x36, 0x0,  0x62, 0xe3, 0x44, 0xcc, 0x8a, 0xbf, 0x5d, 0xe5, 0x0,  0x0,  0x0,  0x0,  0x49,
    0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};
static constexpr const unsigned char gGreenIcon[] = {
    0x89, 0x50, 0x4e, 0x47, 0xd,  0xa,  0x1a, 0xa,  0x0,  0x0,  0x0,  0xd,  0x49, 0x48, 0x44, 0x52, 0x0,  0x0,  0x0,  0x10, 0x0,  0x0,  0x0,  0x10,
    0x8,  0x3,  0x0,  0x0,  0x0,  0x28, 0x2d, 0xf,  0x53, 0x0,  0x0,  0x0,  0x1,  0x73, 0x52, 0x47, 0x42, 0x1,  0xd9, 0xc9, 0x2c, 0x7f, 0x0,  0x0,
    0x0,  0x9,  0x70, 0x48, 0x59, 0x73, 0x0,  0x0,  0xb,  0x13, 0x0,  0x0,  0xb,  0x13, 0x1,  0x0,  0x9a, 0x9c, 0x18, 0x0,  0x0,  0x2,  0x4,  0x50,
    0x4c, 0x54, 0x45, 0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x13, 0x0,  0x0,  0x1b, 0x0,  0x0,  0x1c, 0x0,  0x0,  0x14, 0x0,  0x0,  0x46, 0x0,
    0x22, 0x73, 0x20, 0x43, 0x94, 0x42, 0x4e, 0xa0, 0x4c, 0x4f, 0xa0, 0x4d, 0x44, 0x95, 0x44, 0x28, 0x77, 0x27, 0x0,  0x4b, 0x0,  0x1,  0x2b, 0x0,
    0x0,  0x57, 0x0,  0x45, 0x9c, 0x44, 0xa5, 0xd3, 0xa4, 0xda, 0xf0, 0xda, 0xe3, 0xf4, 0xe3, 0xe4, 0xf4, 0xe3, 0xdc, 0xf0, 0xdb, 0xae, 0xd8, 0xad,
    0x50, 0xa3, 0x4f, 0x0,  0x5d, 0x0,  0x1,  0x39, 0x0,  0x0,  0x58, 0x0,  0x8,  0x7e, 0x7,  0xa8, 0xd9, 0xa6, 0xc4, 0xe9, 0xc3, 0xc1, 0xea, 0xc0,
    0xc1, 0xeb, 0xc0, 0xb2, 0xdf, 0xb1, 0xc,  0x84, 0xb,  0x1,  0x5b, 0x0,  0x0,  0x0,  0x0,  0x1,  0x28, 0x0,  0x1,  0x80, 0x0,  0x1d, 0xa0, 0x1b,
    0x84, 0xd7, 0x82, 0x80, 0xda, 0x7f, 0x81, 0xdf, 0x7f, 0x81, 0xe0, 0x7f, 0x80, 0xdb, 0x7f, 0x2c, 0xa8, 0x2b, 0x2,  0x84, 0x0,  0x1,  0x31, 0x0,
    0x0,  0x0,  0x0,  0x4,  0x55, 0x2,  0x4,  0x8e, 0x2,  0x12, 0xa7, 0xf,  0x54, 0xcf, 0x51, 0x53, 0xd5, 0x50, 0x53, 0xda, 0x50, 0x53, 0xdb, 0x50,
    0x53, 0xd6, 0x50, 0x54, 0xd0, 0x51, 0x1a, 0xad, 0x17, 0x5,  0x92, 0x2,  0x4,  0x5f, 0x2,  0x0,  0x0,  0x0,  0x8,  0x67, 0x5,  0xc,  0x9c, 0x8,
    0xe,  0xb0, 0x9,  0x21, 0xc8, 0x1c, 0x26, 0xd2, 0x22, 0x27, 0xd7, 0x22, 0x27, 0xd8, 0x22, 0x27, 0xd3, 0x21, 0x23, 0xca, 0x1e, 0xf,  0xb3, 0xa,
    0xc,  0xa1, 0x8,  0x8,  0x6d, 0x6,  0x0,  0x0,  0x0,  0xb,  0x68, 0x8,  0x11, 0xa4, 0xe,  0x15, 0xba, 0x10, 0x18, 0xce, 0x13, 0x1b, 0xd7, 0x16,
    0x1c, 0xdc, 0x17, 0x1c, 0xdd, 0x17, 0x1b, 0xd8, 0x16, 0x19, 0xcf, 0x13, 0x15, 0xbb, 0x10, 0x12, 0xa8, 0xe,  0xc,  0x70, 0x9,  0x0,  0x0,  0x0,
    0xf,  0x69, 0xd,  0x18, 0xac, 0x16, 0x1e, 0xc7, 0x1a, 0x26, 0xde, 0x21, 0x2a, 0xe7, 0x25, 0x2c, 0xec, 0x27, 0x2d, 0xed, 0x27, 0x2c, 0xec, 0x26,
    0x2a, 0xe7, 0x24, 0x25, 0xdd, 0x21, 0x1e, 0xc6, 0x1a, 0x19, 0xae, 0x16, 0x10, 0x6f, 0xe,  0x10, 0x56, 0xe,  0x1f, 0xaa, 0x1b, 0x28, 0xcc, 0x23,
    0x34, 0xe7, 0x2d, 0x3a, 0xf1, 0x33, 0x3e, 0xf6, 0x36, 0x3f, 0xf7, 0x38, 0x3e, 0xf5, 0x36, 0x39, 0xef, 0x32, 0x32, 0xe3, 0x2c, 0x27, 0xc7, 0x22,
    0x1f, 0xa9, 0x1b, 0x11, 0x60, 0xf,  0x0,  0x0,  0x0,  0x6,  0x19, 0x5,  0x21, 0x98, 0x1e, 0x2e, 0xc6, 0x29, 0x3d, 0xe6, 0x37, 0x46, 0xf4, 0x3f,
    0x4d, 0xfb, 0x46, 0x4f, 0xfd, 0x48, 0x4f, 0xfc, 0x47, 0x4c, 0xf9, 0x45, 0x43, 0xee, 0x3d, 0x39, 0xde, 0x34, 0x2b, 0xbc, 0x27, 0x20, 0x96, 0x1d,
    0x7,  0x21, 0x7,  0x0,  0x0,  0x0,  0x1a, 0x62, 0x18, 0x2d, 0xad, 0x29, 0x3f, 0xdc, 0x39, 0x4a, 0xee, 0x44, 0x54, 0xfa, 0x4d, 0x57, 0xfd, 0x50,
    0x57, 0xfc, 0x4f, 0x52, 0xf6, 0x4b, 0x46, 0xe5, 0x40, 0x3a, 0xcf, 0x35, 0x2b, 0xa6, 0x26, 0x1a, 0x65, 0x17, 0x0,  0x0,  0x0,  0x0,  0x0,  0x0,
    0xe,  0x2d, 0xd,  0x31, 0xab, 0x2f, 0x40, 0xd6, 0x3d, 0x4c, 0xec, 0x48, 0x51, 0xf2, 0x4d, 0x50, 0xf0, 0x4c, 0x4a, 0xe7, 0x46, 0x3d, 0xcc, 0x3a,
    0x2e, 0xa4, 0x2c, 0x11, 0x3b, 0x10, 0x0,  0x1,  0x0,  0x0,  0x0,  0x0,  0x18, 0x4d, 0x17, 0x2d, 0x8d, 0x2b, 0x3d, 0xbd, 0x3a, 0x42, 0xc9, 0x3e,
    0x41, 0xc8, 0x3e, 0x3c, 0xbb, 0x39, 0x2c, 0x8c, 0x2a, 0x18, 0x50, 0x17, 0x0,  0x0,  0x0,  0x8,  0x15, 0x8,  0xe,  0x29, 0xe,  0xe,  0x29, 0xd,
    0x9,  0x18, 0x9,  0x0,  0x1,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x0,  0x5f, 0x50, 0x31, 0x64, 0x0,  0x0,  0x0,  0xac, 0x74,
    0x52, 0x4e, 0x53, 0x0,  0x1,  0x8,  0x1b, 0x1e, 0xa,  0x1a, 0x55, 0xa8, 0xcb, 0xcd, 0xae, 0x5e, 0x20, 0x7,  0x3a, 0xd4, 0xf8, 0xff, 0xff, 0xff,
    0xff, 0xfa, 0xdd, 0x47, 0x9,  0x33, 0xce, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0x41, 0x2,  0xe,  0xba, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xcc, 0x14, 0x3,  0x2d, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0x3b, 0x4,  0x58, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x70, 0x5,  0x6b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0x7,  0x58, 0xfb, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x70, 0x3b, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x4a, 0x8,  0x17, 0xaf, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0x1d, 0xa,  0x52, 0xe4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0x61,
    0xc,  0x11, 0x35, 0xd1, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xd9, 0x41, 0x14, 0x12, 0x41, 0x85, 0xcd, 0xdd, 0xde, 0xd0, 0x8d, 0x48, 0x14, 0x25,
    0x30, 0x30, 0x26, 0x15, 0xd,  0x9,  0xb,  0xf3, 0xe4, 0x87, 0x95, 0x0,  0x0,  0x0,  0xfd, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x0,
    0x2,  0x46, 0x6,  0x26, 0x66, 0x16, 0x56, 0x20, 0x5,  0x5,  0x8c, 0x6c, 0xec, 0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x50, 0x11, 0x3e, 0x7e, 0x1,
    0x41, 0x21, 0x61, 0x11, 0x51, 0x31, 0x71, 0x9,  0x49, 0x90, 0x10, 0xa3, 0x94, 0xb4, 0x8c, 0xac, 0x9c, 0xbc, 0xbc, 0x9c, 0xac, 0x82, 0xa2, 0x92,
    0x32, 0x90, 0xaf, 0xa2, 0xaa, 0xa6, 0xae, 0xa1, 0xa9, 0xa5, 0xa5, 0xa9, 0xad, 0xae, 0xa3, 0xab, 0xa7, 0xcc, 0xa0, 0x6f, 0x60, 0x68, 0x64, 0x6c,
    0x62, 0x6a, 0x66, 0x66, 0x6a, 0x6e, 0x61, 0x69, 0x65, 0xad, 0xcf, 0x60, 0x63, 0x6b, 0x67, 0xef, 0xe0, 0xe8, 0xe4, 0xec, 0xec, 0xe4, 0xe2, 0xea,
    0xe6, 0xee, 0xa1, 0xcf, 0xe0, 0xe9, 0xe5, 0xed, 0xe3, 0xeb, 0xe7, 0xef, 0x1f, 0xe0, 0x1f, 0x18, 0x14, 0x1c, 0x12, 0xea, 0xc9, 0x10, 0x16, 0x1e,
    0x11, 0x19, 0x15, 0x1d, 0x13, 0x1b, 0x1b, 0x17, 0x9f, 0x90, 0x98, 0x94, 0x1c, 0xc6, 0x10, 0x96, 0x92, 0x9a, 0x96, 0x9e, 0x91, 0x99, 0x95, 0x95,
    0x9d, 0x93, 0x9b, 0x97, 0x5f, 0x50, 0xc8, 0x60, 0x53, 0x54, 0x5c, 0x52, 0x5a, 0x56, 0x5e, 0x51, 0x59, 0x55, 0x5d, 0x53, 0x5b, 0x57, 0xef, 0xc9,
    0xa0, 0xdc, 0xd0, 0xd8, 0xd4, 0xdc, 0xd2, 0xda, 0xd6, 0xde, 0xd1, 0xd9, 0xd5, 0xdd, 0xd3, 0xb,  0x74, 0x88, 0x7e, 0x5f, 0xff, 0x84, 0x89, 0x93,
    0x26, 0x4f, 0x99, 0x3a, 0x6d, 0xfa, 0x8c, 0x99, 0x36, 0x20, 0x97, 0x86, 0xcd, 0x9a, 0x3d, 0x67, 0xee, 0xbc, 0xf9, 0xb,  0x16, 0x2e, 0x5a, 0x5c,
    0x8,  0xf6, 0xd,  0xa3, 0x7e, 0xef, 0xe2, 0x25, 0x4b, 0x97, 0x2d, 0x5f, 0xb1, 0xd2, 0x6,  0xe6, 0x5f, 0x65, 0x9b, 0x55, 0xab, 0x7b, 0x57, 0x79,
    0x2a, 0x83, 0xd8, 0x0,  0xf9, 0xaf, 0x43, 0xb6, 0x25, 0xc,  0xe7, 0x48, 0x0,  0x0,  0x0,  0x0,  0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};
#endif  // WWIDGET_H
